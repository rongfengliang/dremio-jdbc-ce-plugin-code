<?xml version="1.0"?>
<!--

    Copyright (C) 2017-2019 Dremio Corporation. This file is confidential and private property.

-->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.dremio.community.plugins</groupId>
    <artifactId>dremio-ce-jdbc-plugin-parent</artifactId>
    <version>20.1.0-202202061055110045-36733c65</version>
  </parent>
  
  <artifactId>dremio-ce-jdbc-plugin</artifactId>
  <name>Community - Storage Plugins - JDBC</name>
  
  <properties>
    <derby.database.name>dremio_derby_test</derby.database.name>
    <mysql.database.name>dremio_mysql_test</mysql.database.name>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>com.dremio.sabot</groupId>
      <artifactId>dremio-sabot-kernel</artifactId>
      <version>${project.version}</version>
    </dependency>    
    <dependency>
      <groupId>com.dremio.sabot</groupId>
      <artifactId>dremio-sabot-kernel</artifactId>
      <classifier>tests</classifier>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.dremio</groupId>
      <artifactId>dremio-common</artifactId>
      <classifier>tests</classifier>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.calcite</groupId>
      <artifactId>calcite-core</artifactId>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.hydromatic</groupId>
      <artifactId>scott-data-hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.hydromatic</groupId>
      <artifactId>foodmart-data-hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>2.1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbyclient</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbynet</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.dremio</groupId>
      <artifactId>dremio-connector</artifactId>
    </dependency>
    <dependency>
      <groupId>com.dremio.community.plugins</groupId>
      <artifactId>dremio-ce-jdbc-fetcher-api</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <configuration>
          <protoSourceRoot>${basedir}/src/main/proto</protoSourceRoot>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-sources/protobuf</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkCount>${forkCount}</forkCount>
          <systemPropertyVariables>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <!-- Because the JDBC tests are somewhat heavyweight, we only run them in the 'verify' phase -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!-- these tests require forkCount = 1, if > 1, will fail sporadically -->
          <forkCount>1</forkCount>
          <systemPropertyVariables>
            <derby.database.port>${derby.reserved.port}</derby.database.port>
            <derby.database.name>${derby.database.name}</derby.database.name>
            <mysql.database.port>${mysql.reserved.port}</mysql.database.port>
            <mysql.database.name>${mysql.database.name}</mysql.database.name>
          </systemPropertyVariables>
          <includes>
            <include>**/IT*.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Allows us to reserve ports for external servers that we will launch  -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>reserve-network-port</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <!-- avoid using system range for ephemeral ports as
                   servers are not immediately started, and pre-allocated
                   ports might have been reused by OS
                   Some tests also use fixed port in the 20000 range
              -->
              <!-- Always use non-overlapping ranges in each pom to avoid port conflict -->
              <minPortNumber>13000</minPortNumber>
              <maxPortNumber>13999</maxPortNumber>
              <portNames>
                <portName>derby.reserved.port</portName>
                <portName>mysql.reserved.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>${skipTests}</skip>
              <artifactItems>
                <artifactItem>
                  <!-- This will download a MySQL distribution and use it to run tests against -->
                  <groupId>com.jcabi</groupId>
                  <artifactId>mysql-dist</artifactId>
                  <version>5.6.14</version>
                  <classifier>${mysql.classifier}</classifier>
                  <type>zip</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/mysql-dist</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Allows us to run tests against an in-memory Derby database -->
        <groupId>com.btmatthews.maven.plugins.inmemdb</groupId>
        <artifactId>inmemdb-maven-plugin</artifactId>
        <configuration>
          <monitorKey>inmemdb</monitorKey>
          <monitorPort>11527</monitorPort>
          <skip>${skipTests}</skip>
        </configuration>
        <executions>
          <execution>
            <id>run</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <daemon>true</daemon>
              <type>derby</type>
              <database>${derby.database.name}</database>
              <username>root</username>
              <password>root</password>
              <port>${derby.reserved.port}</port>
              <sources>
                <script>
                  <sourceFile>${basedir}/src/test/resources/derby-test-data.sql</sourceFile>
                </script>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>stop</id>
            <goals>
              <goal>stop</goal>
            </goals>
            <phase>post-integration-test</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.jcabi</groupId>
        <artifactId>jcabi-mysql-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>mysql-test</id>
            <goals>
              <goal>classify</goal>
              <goal>start</goal>
              <goal>stop</goal>
            </goals>
            <configuration>
              <skip>${skipTests}</skip>
              <port>${mysql.reserved.port}</port>
              <data>${project.build.directory}/mysql-data</data>
              <clearexistingdata>true</clearexistingdata>
              <dbname>${mysql.database.name}</dbname>
              <socket>${java.io.tmpdir}/mysql-${mysql.reserved.port}.sock</socket>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.37</version>
          </dependency>
        </dependencies>
        <configuration>
          <skip>${skipTests}</skip>
          <driver>com.mysql.jdbc.Driver</driver>
          <username>root</username>
          <password>root</password>
          <url>jdbc:mysql://localhost:${mysql.reserved.port}/${mysql.database.name}</url>
        </configuration>
        <executions>
          <execution>
            <id>create-tables</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <orderFile>ascending</orderFile>
              <fileset>
                <basedir>${basedir}/src/test/resources</basedir>
                <includes>
                  <include>mysql-test-data.sql</include>
                </includes>
              </fileset>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>  
</project>
